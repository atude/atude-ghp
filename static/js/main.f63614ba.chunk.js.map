{"version":3,"sources":["components/Drawer.js","App.js","serviceWorker.js","index.js","assets/ic_atude.png"],"names":["ResponsiveDrawer","state","mobileOpen","handleDrawerToggle","_this","setState","_this$props","this","props","classes","theme","getSideHead","react_default","a","createElement","className","src","icAtude","alt","index_es","style","fontSize","lineHeight","textAlign","variant","color","getSideList","button","key","mdi_material_ui_index_es","primary","onClick","handleClick","open","in","timeout","unmountOnExit","component","disablePadding","inset","drawer","root","CssBaseline_default","position","appBar","aria-label","menuButton","noWrap","Hidden_default","smUp","implementation","Drawer_default","container","anchor","direction","onClose","paper","drawerPaper","xsDown","React","Component","withStyles","display","Object","defineProperty","breakpoints","up","width","flexShrink","marginLeft","concat","marginRight","toolbar","mixins","content","flexGrow","padding","spacing","unit","withTheme","createMuiTheme","palette","main","secondary","error","red","contrastThreshold","tonalOffset","typography","useNextVariants","App","type","dark","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","components_Drawer","core_styles","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f63614ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Menu, AccountBox, Buffer, ChevronDown, ChevronUp, } from 'mdi-material-ui';\r\nimport icAtude from '../assets/ic_atude.png';\r\nimport { AppBar, Typography, IconButton, Button, Toolbar, SwipeableDrawer, List, ListItem, ListItemText, Divider, ListItemIcon, Collapse, Paper, } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 330;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    const getSideHead = \r\n      <div className=\"SidebarHead\">\r\n        <img src={icAtude} alt=\"icAtude\" className=\"SidebarIconHead\"/>\r\n        <Typography style={{fontSize: \"24px\", lineHeight: \"32px\", textAlign: \"right\"}} \r\n          variant=\"overline\" color=\"textPrimary\">\r\n            Mozamel<br/><b>Anwary</b>\r\n        </Typography>\r\n        <br/>\r\n      </div>       \r\n    \r\n    const getSideList = \r\n      <List>\r\n        <ListItem button key=\"About Me\">\r\n          <ListItemIcon><AccountBox/></ListItemIcon>\r\n          <ListItemText primary=\"About Me\"/>\r\n        </ListItem>\r\n\r\n        <ListItem button onClick={this.handleClick} key=\"My Projects\">\r\n          <ListItemIcon><Buffer/></ListItemIcon>\r\n          <ListItemText primary=\"My Projects\"/>\r\n          {this.state.open \r\n            ? <ChevronDown color=\"secondary\"/> \r\n            : <ChevronUp  color=\"secondary\"/>}\r\n        </ListItem>\r\n          <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText inset primary=\"Devote\"/>\r\n            </ListItem>\r\n          </List>\r\n          </Collapse>\r\n      </List>       \r\n\r\n    const drawer = (\r\n      <div>\r\n        {getSideHead}\r\n        {getSideList}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Responsive drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // Injected by the documentation to work in an iframe.\r\n  // You won't need it on your project.\r\n  container: PropTypes.object,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);","import React, { Component } from 'react';\nimport './App.css';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport { AppBar, Typography, IconButton, Button, Toolbar, SwipeableDrawer, List, ListItem, ListItemText, Divider, ListItemIcon, Collapse, Paper, } from '@material-ui/core';\nimport { Menu, AccountBox, Buffer, ChevronDown, ChevronUp, } from 'mdi-material-ui';\nimport icAtude from './assets/ic_atude.png';\nimport DrawerCustom from './components/Drawer.js';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#31393C\",\n    },\n    secondary: {\n      main: \"#2176FF\",\n    },\n\n    error: red,\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n    typography: { useNextVariants: true },\n  },\n});\n\nconst themeSidebar = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    secondary: {\n      main: \"#ffffff\",\n      dark: \"#ffffff\",\n    },\n    typography: { useNextVariants: true },\n  },\n});\n\nclass App extends Component {  \n  constructor(props) {\n    super(props);    \n  }\n  render() {\n  \n    return (\n      <div>\n      <DrawerCustom/>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"HomeContainer\">\n          <Typography>hello</Typography>\n        </div>\n      </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// import React, { Component } from 'react';\n// import './App.css';\n// import { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// import { red } from '@material-ui/core/colors';\n// import { AppBar, Typography, IconButton, Button, Toolbar, SwipeableDrawer, List, ListItem, ListItemText, Divider, ListItemIcon, Collapse, Paper, } from '@material-ui/core';\n// import { Menu, AccountBox, Buffer, ChevronDown, ChevronUp, } from 'mdi-material-ui';\n// import icAtude from './assets/ic_atude.png'\n\n// const theme = createMuiTheme({\n//   palette: {\n//     primary: {\n//       main: \"#31393C\",\n//     },\n//     secondary: {\n//       main: \"#2176FF\",\n//     },\n\n//     error: red,\n//     contrastThreshold: 3,\n//     tonalOffset: 0.2,\n//     typography: { useNextVariants: true },\n//   },\n// });\n\n// const themeSidebar = createMuiTheme({\n//   palette: {\n//     type: \"dark\",\n//     secondary: {\n//       main: \"#ffffff\",\n//       dark: \"#ffffff\",\n//     },\n//     typography: { useNextVariants: true },\n//   },\n// });\n\n// class App extends Component {  \n//   constructor(props) {\n//     super(props);    \n//   }\n\n//   state = {\n//     sidebarState: false,\n//     open: false,\n//   }\n\n//   toggleDrawer = (side, state) => () => {\n//     this.setState({\n//       [side]: state,\n//     });\n//   };\n\n//   handleClick = () => {\n//     this.setState(state => ({ open: !state.open }));\n//   };\n\n//   getIcon = (index) => {\n//     switch(index){\n//       case 0: return <AccountBox/>;\n//       case 1: return <Buffer/>;\n//     }\n//   }\n\n//   render() {\n//     const getSideHead = \n//       <div className=\"SidebarHead\">\n//         <img src={icAtude} alt=\"icAtude\" className=\"SidebarIconHead\"/>\n//         <Typography style={{fontSize: \"24px\", lineHeight: \"32px\", textAlign: \"right\"}} \n//           variant=\"overline\" color=\"textPrimary\">\n//             Mozamel<br/><b>Anwary</b>\n//         </Typography>\n//         <br/>\n//       </div>       \n\n//     const getSideList = \n//       <List>\n//         <ListItem button key=\"About Me\">\n//           <ListItemIcon>{this.getIcon(0)}</ListItemIcon>\n//           <ListItemText primary=\"About Me\"/>\n//         </ListItem>\n\n//         <ListItem button onClick={this.handleClick} key=\"My Projects\">\n//           <ListItemIcon>{this.getIcon(1)}</ListItemIcon>\n//           <ListItemText primary=\"My Projects\"/>\n//           {this.state.open \n//             ? <ChevronDown color=\"secondary\"/> \n//             : <ChevronUp  color=\"secondary\"/>}\n//         </ListItem>\n//           <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n//           <List component=\"div\" disablePadding>\n//             <ListItem button>\n//               <ListItemIcon></ListItemIcon>\n//               <ListItemText inset primary=\"Devote\"/>\n//             </ListItem>\n//           </List>\n//           </Collapse>\n//       </List>       \n    \n//     return (\n//       <div>\n//       <MuiThemeProvider theme={themeSidebar}>\n//       <SwipeableDrawer variant=\"permanent\"\n//       anchor=\"left\"\n//       open={this.state.sidebarState}\n//       onClose={this.toggleDrawer('sidebarState', false)}\n//       onOpen={this.toggleDrawer('sidebarState', true)}>\n//         <div tabIndex={0} role=\"button\" className=\"Sidebar\"\n//           onClose={this.toggleDrawer('sidebarState', false)} \n//           onKeyDown={this.toggleDrawer('sidebarState', false)}>\n//           <div className=\"Sidebar\">\n//             {getSideHead}\n//             <Divider/>\n//             {getSideList}\n//           </div>\n//         </div>\n//       </SwipeableDrawer>\n//       </MuiThemeProvider>\n\n//       <MuiThemeProvider theme={theme}>\n//         <div className=\"HomeContainer\">\n//           <Typography>hello</Typography>\n//         </div>\n//       </MuiThemeProvider>\n//     </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ic_atude.defb2faf.png\";"],"sourceRoot":""}